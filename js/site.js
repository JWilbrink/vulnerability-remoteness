function generateDashboard(data,geom){
    var map = new lg.map('#map').geojson(geom).nameAttr('TRAD_AUTH').joinAttr('P_CODE').zoom(6.5).center([-13,34]);

    var hi_vulnerability = new lg.column("#sovi").label("Hazard-independent vulnerability").axisLabels(false)
    		.colorAccessor(function(d){ if (d>80) {return 5;} else if (d>60) {return 4;} else if (d>=40) {return 3;} else if (d>=20) {return 2;} else if (d<0) {return 1;}});
 
     
    var nr_houses = new lg.column("#nr_houses").label("Houses(#)").axisLabels(false); 
      
    var house_dens = new lg.column("#house_dens").label("House density (per Area of TA)").axisLabels(false);  
	
	var road_dens = new lg.column("#road_dens").label("Road density (per Area of TA").axisLabels(false);

	
    var road_lengt = new lg.column("#road_lengt").label("Road length (km)").axisLabels(false);

    
    var nr_health = new lg.column("#nr_health").label("Number of health-facilities").axisLabels(false);
        
	var resi_area = new lg.column("#resi_area").label("Residential area (km2)");  
	
	
	
	 
	var landuse = new lg.column("#landuse").label("Landuse").axisLabels(false);
	
    var soorgcarb = new lg.column("#soorgcarb").label("Soil organic carbon").axisLabels(false);
    
    var pov_level = new lg.column("#pov_level").label("Povert level").axisLabels(false);
    
	var malar_susc = new lg.column("#malar_susc").label("Malaria Susceptibility").axisLabels(false);
    var infant_mor = new lg.column("#infant_mor").label("Infant Mortality").axisLabels(false)
    		.colorAccessor(function(d){ if (d>80) {return 4;} else if (d>60) {return 3;} else if (d>=40) {return 2;} else if (d>=20) {return 1;} else if (d<0) {return 0;}});
		
    var fe_head_hh = new lg.column("#fe_head_hh").label("Female-headed households").axisLabels(false)
    		.colorAccessor(function(d){ if (d>80) {return 4;} else if (d>60) {return 3;} else if (d>=40) {return 2;} else if (d>=20) {return 1;} else if (d<0) {return 0;}});
    var build_mat = new lg.column("#build_mat").label("Building material").axisLabels(false);
    
    var market_acc = new lg.column("#market_acc").label("Market accessibility").axisLabels(false);
    
    var literacy_l = new lg.column("#literacy_l").label("Lack of Literacy").axisLabels(false);
    
    var irrig_area = new lg.column("#irrig_area").label("Irrigated areas").axisLabels(false);
    
    var health_inf = new lg.column("#health_inf").label("Health infrastructure").axisLabels(false);

    var edu_mother = new lg.column("#edu_mother").label("Education of mother").axisLabels(false);

    var anthro_bio = new lg.column("#anthro_bio").label("Anthropogenic biomes").axisLabels(false);
   

    
 
    
    
		
    lg.colors(["#ffffb2","#fecc5c","#fd8d3c","#f03b20","#bd0026"]);	
	
	var group1 = 1;
	var group2 = 13;
	var group3 = 0;
	var group4 = 0;
	
	var name1 = 'Dependent (Y) variable';
	var name2 = 'Independent (X) variables';


    var grid1 = new lg.grid('#grid1')
        .data(data)
        .width($('#grid1').width())
        .height(5000)
        .nameAttr('#adm3+name')
        .joinAttr('#adm3+code')
        .hWhiteSpace(4)
        .vWhiteSpace(4)
        .margins({top: 250, right: 20, bottom: 30, left: 200})
         .columns([hi_vulnerability,nr_houses,house_dens,road_dens,road_lengt,nr_health,resi_area])
		;

	$('#run1').on('click',function(){
	

	

	
        lg._gridRegister = [];
		$('#run2').css({'background-color': 'grey' });
		$('#run1').css({'background-color': '#BF002D' });
        $('#map-container').html('<div id="map"></div>');
        $('#grid1').html('');
        grid1 = new lg.grid('#grid1')
            .data(data)
            .width($('#grid1').width())
            .height(5000)
            .nameAttr('#adm3+name')
            .joinAttr('#adm3+code')
            .hWhiteSpace(4)
            .vWhiteSpace(4)
            .margins({top: 250, right: 20, bottom: 30, left: 200})
            .columns([hi_vulnerability,nr_houses,house_dens,road_dens,road_lengt,nr_health,resi_area])
            ;    
		
		lg.init();
        initlayout(data,hi_vulnerability,'#sovi');
        $("#map").width($("#map").width());
    });

    $('#run2').on('click',function(){
    var group1 = 1;
	var group2 = 7;
	var group3 = 7;
	var group4 = 0;
	
	
	
	
	
        lg._gridRegister = [];
		$('#run1').css({'background-color': 'grey' });
		$('#run2').css({'background-color': '#BF002D' });
        $('#map-container').html('<div id="map"></div>');
        $('#grid1').html('');
        grid1 = new lg.grid('#grid1')
            .data(data)
            .width($('#grid1').width())
            .height(5000)
            .nameAttr('#adm3+name')
            .joinAttr('#adm3+code')
            .hWhiteSpace(4)
            .vWhiteSpace(4)
            .margins({top: 250, right: 20, bottom: 30, left: 200})
            .columns([hi_vulnerability,landuse,soorgcarb,pov_level,malar_susc,infant_mor,fe_head_hh,build_mat,market_acc,literacy_l,irrig_area,health_inf,edu_mother,anthro_bio])
            ;    
		
		lg.init();
        initlayout(data,landuse,'#landuse');
        $("#map").width($("#map").width());
    });
	
	
		
	lg.init();
    initlayout(data,hi_vulnerability,'#sovi');
    $("#map").width($("#map").width());	

    function initlayout(data,sort_indicator1,sort_indicator2){

        //sort table and color map by priority after loading dashboard
        var newdata = [];
        data.forEach(function(d){
            newdata.push({'key':d['#adm3+code'],'value':d[sort_indicator2]});
        });
        map.colorMap(newdata,sort_indicator1);
        grid1._update(data,grid1.columns(),sort_indicator1,'#adm3+name');


    	
		//////////////////////////////////////////
		//Create the category lines above the grid
		//////////////////////////////////////////

		var g = d3.select('#grid1').select('svg').select('g').append('g');

		//Add the number of variables per group
		var offset_hor = 0;
		var offset_vert = -30;
		
		//horizontal line 1
		g.append('line').attr("x1", 0+offset_hor)
						.attr("y1", offset_vert)
						.attr("x2", (lg._gridRegister[0]._properties.boxWidth)*group1+(lg._gridRegister[0]._hWhiteSpace)*(group1-1)+offset_hor)
						.attr("y2", offset_vert)
						.attr("stroke-width", 1)
						.attr("stroke", "black");

		//horizontal line 2
		g.append('line').attr("x1", (lg._gridRegister[0]._properties.boxWidth+lg._gridRegister[0]._hWhiteSpace)*group1+offset_hor)
						.attr("y1", offset_vert)
						.attr("x2", (lg._gridRegister[0]._properties.boxWidth)*(group1+group2)+(lg._gridRegister[0]._hWhiteSpace)*(group1+group2-1)+offset_hor)
						.attr("y2", offset_vert)
						.attr("stroke-width", 1)
						.attr("stroke", "black");

 		//horizontal line 3
		g.append('line').attr("x1", (lg._gridRegister[0]._properties.boxWidth+lg._gridRegister[0]._hWhiteSpace)*(group1+group2)+offset_hor)
						.attr("y1", offset_vert)
						.attr("x2", (lg._gridRegister[0]._properties.boxWidth)*(group1+group2+group3)+(lg._gridRegister[0]._hWhiteSpace)*(group1+group2+group3-1)+offset_hor)
						.attr("y2", offset_vert)
						.attr("stroke-width", 1)
						.attr("stroke", "black");

/*		//horizontal line 4
		g.append('line').attr("x1", (lg._gridRegister[0]._properties.boxWidth+lg._gridRegister[0]._hWhiteSpace)*(group1+group2+group3)+offset_hor)
						.attr("y1", offset_vert)
						.attr("x2", (lg._gridRegister[0]._properties.boxWidth+lg._gridRegister[0]._hWhiteSpace)*(group1+group2+group3+group4))
						.attr("y2", offset_vert)
						.attr("stroke-width", 1)
						.attr("stroke", "black"); */

		//vertical line 1.1
		g.append('line').attr("x1", 0+offset_hor)
						.attr("y1", offset_vert)
						.attr("x2", 0+offset_hor)
						.attr("y2", (offset_vert-5))
						.attr("stroke-width", 1)
						.attr("stroke", "black");

		//vertical line 1.2
		g.append('line').attr("x1", lg._gridRegister[0]._properties.boxWidth*(group1)+(lg._gridRegister[0]._hWhiteSpace)*(group1-1)+offset_hor)
						.attr("y1", offset_vert)
						.attr("x2", lg._gridRegister[0]._properties.boxWidth*(group1)+(lg._gridRegister[0]._hWhiteSpace)*(group1-1)+offset_hor)
						.attr("y2", (offset_vert-5))
						.attr("stroke-width", 1)
						.attr("stroke", "black");

		//vertical line 2.1
		g.append('line').attr("x1", (lg._gridRegister[0]._properties.boxWidth+lg._gridRegister[0]._hWhiteSpace)*(group1)+offset_hor)
						.attr("y1", offset_vert)
						.attr("x2", (lg._gridRegister[0]._properties.boxWidth+lg._gridRegister[0]._hWhiteSpace)*(group1)+offset_hor)
						.attr("y2", (offset_vert-5))
						.attr("stroke-width", 1)
						.attr("stroke", "black");

		//vertical line 2.2
		g.append('line').attr("x1", lg._gridRegister[0]._properties.boxWidth*(group1+group2)+(lg._gridRegister[0]._hWhiteSpace)*(group1+group2-1)+offset_hor)
						.attr("y1", offset_vert)
						.attr("x2", lg._gridRegister[0]._properties.boxWidth*(group1+group2)+(lg._gridRegister[0]._hWhiteSpace)*(group1+group2-1)+offset_hor)
						.attr("y2", (offset_vert-5))
						.attr("stroke-width", 1)
						.attr("stroke", "black");

		//vertical line 3.1
		g.append('line').attr("x1", (lg._gridRegister[0]._properties.boxWidth+lg._gridRegister[0]._hWhiteSpace)*(group1+group2)+offset_hor)
						.attr("y1", offset_vert)
						.attr("x2", (lg._gridRegister[0]._properties.boxWidth+lg._gridRegister[0]._hWhiteSpace)*(group1+group2)+offset_hor)
						.attr("y2", (offset_vert-5))
						.attr("stroke-width", 1)
						.attr("stroke", "black");

		//vertical line 3.2
		g.append('line').attr("x1", lg._gridRegister[0]._properties.boxWidth*(group1+group2+group3)+(lg._gridRegister[0]._hWhiteSpace)*(group1+group2+group3-1)+offset_hor)
						.attr("y1", offset_vert)
						.attr("x2", lg._gridRegister[0]._properties.boxWidth*(group1+group2+group3)+(lg._gridRegister[0]._hWhiteSpace)*(group1+group2+group3-1)+offset_hor)
						.attr("y2", (offset_vert-5))
						.attr("stroke-width", 1)
						.attr("stroke", "black");

		/* //vertical line 4.1
		g.append('line').attr("x1", (lg._gridRegister[0]._properties.boxWidth+lg._gridRegister[0]._hWhiteSpace)*(group1+group2+group3)+offset_hor)
						.attr("y1", offset_vert)
						.attr("x2", (lg._gridRegister[0]._properties.boxWidth+lg._gridRegister[0]._hWhiteSpace)*(group1+group2+group3)+offset_hor)
						.attr("y2", (offset_vert-5))
						.attr("stroke-width", 1)
						.attr("stroke", "black");

		//vertical line 4.2
		g.append('line').attr("x1", (lg._gridRegister[0]._properties.boxWidth+lg._gridRegister[0]._hWhiteSpace)*(group1+group2+group3+group4))
						.attr("y1", offset_vert)
						.attr("x2", (lg._gridRegister[0]._properties.boxWidth+lg._gridRegister[0]._hWhiteSpace)*(group1+group2+group3+group4))
						.attr("y2", (offset_vert-5))
						.attr("stroke-width", 1)
						.attr("stroke", "black"); */

		//horizontal text 1
		g.append('text').attr('x', lg._gridRegister[0]._properties.boxWidth*(group1/2)+offset_hor)
						.attr('y', (offset_vert+15))
						.text(name1)
						.style("text-anchor", "middle")
						.attr("font-size",12);

		//horizontal text 2
		g.append('text').attr('x', (lg._gridRegister[0]._properties.boxWidth+lg._gridRegister[0]._hWhiteSpace)*(group1+group2/2)+offset_hor)
						.attr('y', (offset_vert+15))
						.text(name2)
						.style("text-anchor", "middle")
						.attr("font-size",12);              

 		/*//horizontal text 3
		g.append('text').attr('x', (lg._gridRegister[0]._properties.boxWidth+lg._gridRegister[0]._hWhiteSpace)*(group1+group2+group3/2)+offset_hor)
						.attr('y', (offset_vert+15))
						.text(name3a)
						.style("text-anchor", "middle")
						.attr("font-size",12);              

/*		//horizontal text 4
		g.append('text').attr('x', (lg._gridRegister[0]._properties.boxWidth+lg._gridRegister[0]._hWhiteSpace)*(group1+group2+group3+group4/2)+offset_hor)
						.attr('y', (offset_vert+15))
						.text('Demographics')
						.style("text-anchor", "middle")
						.attr("font-size",12);      */                                                                                                                             
	}
}

function hxlProxyToJSON(input,headers){
    var output = [];
    var keys=[]
    input.forEach(function(e,i){
        if(i==0){
            e.forEach(function(e2,i2){
                var parts = e2.split('+');
                var key = parts[0]
                if(parts.length>1){
                    var atts = parts.splice(1,parts.length);
                    atts.sort();                    
                    atts.forEach(function(att){
                        key +='+'+att
                    });
                }
                keys.push(key);
            });
        } else {
            var row = {};
            e.forEach(function(e2,i2){
                row[keys[i2]] = e2;
            });
            output.push(row);
        }
    });
    return output;
}

function stickydiv(){
    var window_top = $(window).scrollTop();
    var div_top = $('#sticky-anchor').offset().top;
    if (window_top > div_top){
        $('#map-container').addClass('sticky');
    }
    else{
        $('#map-container').removeClass('sticky');
    }
};

$(window).scroll(function(){
    stickydiv();
}); 

//load data

var dataCall = $.ajax({ 
    type: 'GET', 
    url: 'data/data.json', //https://proxy.hxlstandard.org/data.json?merge-keys01=%23adm2%2Bcode&strip-headers=on&filter01=merge&merge-url01=https%3A//docs.google.com/spreadsheets/d/1klRixK82iRk1JnDOpAqKrry4VQiFcTGrfFZWr9ih-Z8/pub%3Fgid%3D777123392%26single%3Dtrue%26output%3Dcsv&url=https%3A//docs.google.com/spreadsheets/d/1OlxhQ_ejRKNvohbnfJ7yJPKD6U6pXcPPfsFnwBbP2nc/pub%3Fgid%3D0%26single%3Dtrue%26output%3Dcsv&filter02=select&select-query02-01=%23indicator%2Bcategory%21%3D1&merge-tags01=%23affected%2Bdeaths%2C%23affected%2Bmissing%2C%23affected%2Bwounded%2C%23affected%2Binshelter%2C%23affected%2Bbuildings%2Bdestroyed%2C%23affected%2Bbuildings%2Bpartially%2C%23affected%2Bschools', 
    dataType: 'json',
});

//load geometry

var geomCall = $.ajax({ 
    type: 'GET', 
    url: 'data/geom.json', 
    dataType: 'json',
});

//when both ready construct dashboard

$.when(dataCall, geomCall).then(function(dataArgs,geomArgs){
    geom = topojson.feature(geomArgs[0],geomArgs[0].objects.geom);
    overview = hxlProxyToJSON(dataArgs[0],false);
    generateDashboard(overview,geom);
});
